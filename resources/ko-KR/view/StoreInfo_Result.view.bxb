// 결과 화면에 대한 보여주는 방식을 설정합니다. (https://bixbydevelopers.com/dev/docs/reference/type/result-view)
result-view {
  // 결과 화면을 보여주고 싶은 output concept을 지정합니다.
  match: StoreInfo(this)
  
  message {
    // 결과 화면에 보여줄 dialog를 설정합니다.
    if(!exists(this)){
      template-macro (no_result)
    }else{
      template-macro (result_answer) 
    }
    
  }
  
  render {
    // 어떻게 화면을 그릴 것인가에 대하여 설정합니다.
    // 결과 값 갯수에 따라 다르게 보여주도록 합니다.
    if (size(this) == 1) {
      layout-macro (storeInfo_details) {
        param (info) { // StoreInfo_Details_Macro.layout.bxb의 param명을 적습니다.
          expression (this) // 결과 객체를 layout으로 전달합니다.
        }
      }
      
      // 'layout-match' 또는 'layout-macro'를 사용하실 수 있습니다. (https://bixbydevelopers.com/dev/docs/dev-guide/developers/refining-dialog.dialog-macros)
      // layout-match (this) {
      //   mode (Details)
      // }
      
    }else {
      list-of (this) {
        where-each (info) {
          layout-macro (storeInfo_summary) {
            param (info) { // StoreInfo_Summary_Macro.layout.bxb의 param명을 적습니다.
              expression (info) // 결과 객체들중 하나를 layout으로 전달합니다.
            }
          }
        }
      }
    }
  }
  
  // 결과 화면 하단에 다음에 이어질 수 있는 발화를 알려줍니다.(https://bixbydevelopers.com/dev/docs/dev-guide/developers/enhancing-UX.conversation-drivers)
  // continuation 발화를 하시려면 training에서 continiation-of를 사용하셔야 합니다.
  // (https://bixbydevelopers.com/dev/docs/dev-guide/developers/training.intro-training#add-training-examples-for-continuations)
  conversation-drivers {
    if (size(this) == 1) {
      conversation-driver {
        template ("고양시는?")
      }
    }else{
      conversation-driver {
        template ("인계동은 어때?")
      }
    }
  }
}